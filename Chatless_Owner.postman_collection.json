{
	"info": {
		"_postman_id": "40f2b2d5-df18-4a5f-b179-bff67ca006ed",
		"name": "Chatless_Owner",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40e34a38-91a2-453e-aed3-e823301452ae",
						"exec": [
							"pm.test(\"Test login\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
							"    pm.environment.set(\"accessToken\",jsonData.data.login.accessToken); ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-authen",
						"value": "=zSjyDm9eAC8ffwochm1yyU7k5rDXa7tD",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  login(input:{email:\"first.owner@gmail.com\",password:\"1234567\",grantType:\"password\",role:\"owner\"}) {\n    accessToken\n    tokenType\n    expiresIn\n    refreshToken\n    userId\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "selectRole",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80eb4673-0d9d-45b7-8fbf-ad6ed3ccc11d",
						"exec": [
							"pm.test(\"Test select role owner\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"owner\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\n  selectRole(role:\"owner\")\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getSocialMethod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "57e14028-0227-4138-9c8d-dc9f88363c9d",
						"exec": [
							"pm.test(\"Test get social method\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    pm.environment.set(\"categoryId\",jsonData.data.allSocialMethod[0].category[0].id); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  allSocialMethod {\n    id\n    name\n    title\n    image\n    category {\n      id\n      name\n      title\n      image\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createAccessTokenFacebook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "241f05da-7daa-4cfd-83d6-1892b4ba44da",
						"exec": [
							"pm.test(\"Test create page\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  createFacebookAccessToken(accessToken:\"EAAIq9rxQMZAABANVOiZBUhpmMIS21sa82KezXqrgKlaNtQ7aftMVr6zI0JfmTYc5ukrrIWfESd42l4rdyuDMkEdb9GZAu22UJgj1ZAYq12lFRr1AuE6utaTdJDNgJT6LCND0sp0BqDb2kRLr6NFAnUikuFdLT7SWEOQtq7totU7NXwnshdmlV6f6znOPMWGau2gFskSzbQZDZD\")\n}\n\n#accessToken คือ accessToken ที่ได้มาจาก Login Facebook ของผู้ใช้งาน\n#Authorization ใช้ token จาก api chatless ยิงพร้อม Header เหมือนเดิมเพราะต้องมี token จาก api chatless แนบมาด้วยครับ",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "allPage (Step2 Before Create Page)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getMyUserDetail {\n    line {\n      data {\n        id\n        name\n        category\n        picture\n      }\n    }\n    facebook {\n     data {\n      id\n      name\n      category\n      picture\n     }\n    } \n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createPage (Step2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e3e5b62-53cf-4c15-a439-3768b59676ca",
						"exec": [
							"pm.test(\"Test create page\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  createPage(input:{\n    pageId:\"264231890283990\",\n    socialId:\"2f93fda9-05a8-413e-9966-a3e71136881e\"\n    #socialId ให้ใช้ id จาก Collection getSocialMethod\n  }){\n    uuid\n    pageId\n    passScore\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePage (Step3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1905c0a-c049-468d-95e6-9dcb615a9a93",
						"exec": [
							"pm.test(\"Test create page\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePage(input:{\n    pageId:\"264231890283990\",\n     step:\"3\",\n     category:[\"524bf9a9-9d19-479d-b358-0b0c32668c3f\"],\n     #ใช้ id category จาก collection getSocialMethod\n  }){\n    uuid\n    pageId\n    passScore\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePage (Step4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad4763e2-a651-46de-bac3-acd47af0885e",
						"exec": [
							"pm.test(\"Test create page\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePage(input:{\n    pageId:\"264231890283990\",\n     budget: 1000,\n     step:\"4\",\n  }){\n    uuid\n    pageId\n    passScore\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePage (Step5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e2e5c1e-6cf0-4b74-94b0-3ba2a40057fb",
						"exec": [
							"pm.test(\"Test create page\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePage(input:{\n    pageId:\"264231890283990\",\n    step:\"5\",\n    introPage:[{\n      header:\"GeneralCartoon\",\n      description: \"bot\",\n      image:\"bot_line.png\"\n    }]\n  }){\n    uuid\n    pageId\n    passScore\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePage (Step6)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b5f451d-6c84-44d9-b865-569676acec76",
						"exec": [
							"pm.test(\"Test create page\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePage(input:{\n    pageId:\"264231890283990\",\n    step:\"6\",\n    numberOfQuiz: 10\n    passScore: 7\n    quiz:[{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    },{\n      question: \"10x5 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"50\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    }],\n  }){\n    uuid\n    pageId\n    passScore\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "main",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3cbb6cfe-0912-4f3c-b660-34c7c2b74473",
						"exec": [
							"pm.test(\"Test get for main screen owner\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyPage\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{ \n  allMyPage{\n    uuid\n    introPage {\n      header      \n      description\n      image\n    }\n    followers {\n      id\n     \tusername\n      firstname\n      lastname\n      phone\n    }\n    conversation {\n      conversations {\n        id\n        conversationsId\n        senders {\n          id\n          email\n          picture\n        }\n        message {\n          id\n          from {\n            name\n            email\n          }\n          message\n          typeMessage\n        }\n        messageCount\n        unreadCount\n      }\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "home-fanpage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40cb09c6-d9cc-4523-aa87-5e062b148953",
						"exec": [
							"pm.test(\"Test get for conversation home fanpage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"conversations\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getConversationsByOwner(pageUID:\"01b18ecb-25c0-4790-99f2-3055482869aa\",status:\"new\",label:\"new\"){\n    id\n    senders {\n      id\n      name\n      email\n      picture\n    }\n    message {\n      message\n      typeMessage\n      from {\n        id\n        email\n        name\n        picture\n      }\n    }\n    unreadCount\n    messageCount\n    lastMessage {\n      id\n      message\n      from {\n        id\n        email\n        name\n        picture\n      }\n    }\n    \n  }\n  \n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "selectConversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "959a0d80-a2e1-49a0-b692-03854b9918f1",
						"exec": [
							"pm.test(\"Test get for conversation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"message\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getConversationByID(pageId:\"264231890283990\",id:\"t_2286766214961504\"){\n    id\n      unreadCount\n      messageCount\n      senders {\n        id\n        name\n        email\n      }\n      message {\n        id\n        message\n        from {\n          id\n          name\n          email\n        }\n        createdAt\n      }\n      lastMessage\n      lastUpdate\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "replyArkFromFreelancer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1d68fcc-bd16-4ca9-9293-02cbd863c03b",
						"exec": [
							"pm.test(\"Test get for conversation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"message\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{accessToken}}"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  replyQuestionFromFreelancer(\n    arkId: \"0810f643-cfc0-4b8c-9d2d-0b7b1bffe16a\"\n    message: \"ตอบแทน\"\n    typeMessage: \"text\"\n    )\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "sendMessageCustomerFanpage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9ff9f1f-0706-4f3a-bcb3-c38b04d13c24",
						"exec": [
							"pm.test(\"Test get for conversation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"messageId\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\n  sendMessageByOwner(\n    conversationId: \"t_2286766214961504\"\n    recipientId: \"2890425851077848\"\n    message: \"ทดสอบ1\"\n    typeMessage: \"text\"\n  ){\n    status\n    recipientId\n    messageId\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "allMyFreelancerList",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3b76c56-8075-47bf-9af0-7e872533dd74",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyFreelancerList\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  allMyFreelancerList(pageUID:\"3ffc5b55-f355-4145-81b4-563b4c72b8c1\") {\n    id\n    name\n    phone\n    photo\n    score\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "assignChatToFreelancer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3582c6b-ded0-4871-94f2-145bf6f23a9d",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"createAssignChatToFreelancer\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  createAssignChatToFreelancer(pageUID:\"3ffc5b55-f355-4145-81b4-563b4c72b8c1\",freelancerId:\"6a0e5224-3a2c-4b27-a236-5866d0ea35cf\",conversationId:\"t_2286766214961504\"){\n    id\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateLabel",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "47f41e36-ecb0-4150-8c11-17dfdd1308bb",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"updateLabel\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateLabel(id:\"f143b34d-15eb-40e8-a3b5-19d354083e16\",label:\"new\"){\n    id\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "reviewFreelancer",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c8a9a61-bb92-4efe-9811-fec72a142e22",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"reviewFreelancer\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  reviewFreelancer(freelancerId:\"6cbb6f0e-ef32-42ca-b8f5-78dd9772cc8a\",assignId:\"9a207f79-1e84-4bd9-940d-01a04186db1f\",reviewType:\"great\",reviewMessage:\"\",tips:0){\n    id\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "allMyChatRoomQuestion",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abaac01b-6775-4990-9178-839dff785043",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyChatRoom\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": " {\n  allMyChatRoom{\n    id\n    name\n    senders {\n      userId\n      userLoader {\n        id\n      username\n        name\n      firstname\n      lastname\n      }\n    }\n    senders {\n      userId\n    }\n    messages {\n      id\n      message\n      typeMessage\n      createdBy\n      userLoader {\n        id\n        username\n        name\n        firstname\n        lastname\n      }\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "postMessage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d17864a-c663-4d7c-a67b-b65a7f044a8e",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"postMessage\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  postMessage(message:\"สอบถามหน่อยครับ\",typeMessage:\"text\",receiverId:\"6cbb6f0e-ef32-42ca-b8f5-78dd9772cc8a\"){\n    id\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "walletMain",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4873a711-9a64-4c03-9d68-c0ebbf1ce7fe",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"myWallet\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  myWallet {\n    balance\n    income\n    expense\n    thisweek\n    lastweek\n  }\n  allMyTransactionPayment{\n    id\n    amount\n    status\n    paymentType\n    bankAccountId\n    bankAccountLoader {\n      id\n      branch\n      bankLoader {\n        id\n        name\n        shortName\n      }\n      accountNumber\n    }\n    recieverLoader {\n       id\n      name\n      phone\n      photo\n    }\n    createByLoader {\n        id\n      name\n      phone\n      photo\n    }\n    \n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllMyBankAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d5db54a-13ae-48ff-8ef4-0f8fd882f2b8",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyBankAccount\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  allBankBrand{\n    id\n    name\n  shortName\n  picture\n  }\n  allMyBankAccount {\n    id\n    bankID\n    bankLoader {\n      id\n      name\n      shortName\n      picture\n    }\n    branch\n    accountName\n    accountNumber\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "addBankAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e9058a0-0dc0-4825-ad62-7594aa8fc153",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"addBankAccount\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addBankAccount(bankID:\"618ec479-ef0f-4b5f-bebe-aa622f155657\",\n    branch:\"Siam\",\n    accountName:\"First Freelancer\",\n    accountNumber:\"1234567890\"){\n  \t\tid\n   }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deposit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3a3fcbcf-e71c-4c01-be7f-44359b3b92c3",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"deposit\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deposit(bankAccountId:\"31d59431-204d-4e93-ac52-4c2dea8787bd\",amount:123,slip:\"slip.png\",note:\"-\")\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "manageDeposit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03ee160f-ec98-43b1-916f-041534fc914f",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"mangeDeposit\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  mangeDeposit(id:\"835c6a89-b4e4-4cdf-8864-f84f3aaa2550\",status:\"approve\")\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "myAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "329de287-b524-4565-bbc5-03fadfd6306b",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"getMyUserDetail\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getMyUserDetail {\n    id\n    email\n    name\n    phone\n    score\n    firstLang\n    firstLangLoader {\n      id\n      name\n    }\n    lang\n    langLoader {\n      id\n      name\n    }\n    city\n    cityLoader {\n      id\n      name\n    }\n    country\n    countryLoader {\n      id\n      name\n    }\n    facebook {\n     data {\n      id\n      name\n      category\n     }\n    }\n    social {\n      socialId\n      socialLoader {\n        id\n        name\n        title\n        image\n      }\n      category\n    }\n    followPage {\n      id\n      pageId\n      pageLoader {\n        id\n        pageId\n        desc\n        likes\n        pageOwner {\n          id\n          username\n          firstname\n          lastname\n          phone\n        }\n      }\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateAccountDetail",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f389e3a5-e07e-4063-b0bb-b1ec75652bd7",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"updateAccountDetail\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateAccountDetail(input:{\n     name: \"First Owner Admin\",\n     email: \"first.owner@gmail.com\",\n     phone: \"0987654322\",\n     password:\"1234567\",\n     confirmPassword:\"1234567\"\n  })\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAccountMember",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e4c3165-414b-4d96-a168-22eff5694e98",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyPage\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  allMyPage{\n    uuid\n    introPage {\n      header      \n      description\n      image\n    }\n    category\n    categoryLoader {\n      id\n      title\n      name\n      image\n    }\n    followersCount\n    followers {\n      id\n      name\n      photo\n     \tusername\n      firstname\n      lastname\n      phone\n      score\n    }\n    conversation {\n      name\n    pageID\n    conversations {\n      id\n      conversationsId\n      unreadCount\n      messageCount\n      senders {\n        id\n        name\n        email\n        picture\n      }\n      message {\n        id\n        message\n        from {\n          id\n          name\n          email\n        }\n        createdAt\n      }\n      lastMessage {\n        id\n        message\n        typeMessage\n      }\n      lastUpdate\n    }\n  }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "allMyFreelancerList",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4781e65-8f64-4b1c-8a32-856adf2bc59d",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyFreelancerList\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  allMyFreelancerList(pageUID:\"e57452d3-502f-43df-8f3f-c9613f042959\") {\n    id\n    name\n    phone\n    photo\n    score\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFreelancerDetail",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e747ffb-3cc3-41fa-bc62-edb6c50e4e14",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"getUserDetail\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getUserDetail(id:\"58c1af89-6dff-45e8-b1b4-82c2e4d3e6c5\"){\n    id\n    name\n    gender\n    cityLoader {\n      id\n      name\n    }\n    langLoader {\n      id\n      name\n    }\n    phone\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFreelancerList",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3b0dcf6-821b-47de-b26b-716fe6fb926a",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"removeFreelancer\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  removeFreelancer(pageUID:\"a3dd3dee-d401-4e53-af2d-fdbdf0d2e672\",freelancerId:\"6cbb6f0e-ef32-42ca-b8f5-78dd9772cc8a\")\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "allMyPageLabel",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c5cb052f-9f2f-4cf8-a615-2aba297d9777",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyLabelChatPageOwner\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  allMyLabelChatPageOwner(pageUID:\"a3dd3dee-d401-4e53-af2d-fdbdf0d2e672\") {\n    title\n    name\n    count\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "selectLabelForGetConversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a607ac3-4e52-41ae-b3db-b7653e567c05",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"getConversationsFacebook\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getConversationsFacebook(pageId:\"264231890283990\",label:\"new\")\n  {\n    name\n    pageID\n    conversations {\n      id\n      conversationsId\n      unreadCount\n      messageCount\n      senders {\n        id\n        name\n        email\n        picture\n      }\n      message {\n        id\n        message\n        from {\n          id\n          name\n          email\n        }\n        createdAt\n      }\n      lastMessage\n      lastUpdate\n    }\n  }\n  \n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateLabelConversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0b716fb-00e3-4aee-bb68-9339c8afa2ab",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"updateLabel\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateLabel(id:\"f143b34d-15eb-40e8-a3b5-19d354083e16\",label:\"new\"){\n    id\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateIntroCard",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8721c930-57e5-4086-8fa1-ee315485c0cd",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"updatePageIntroCard\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePageIntroCard(pageUID:\"a3dd3dee-d401-4e53-af2d-fdbdf0d2e672\",input:[{\n    header:\"General Cartoon\",\n    description:\"เว็บอ่านการตูน1\"\n    image : [\"cartoon.png\"]\n  }])\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getQuizPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "091d3aee-7dfe-4024-a898-61e8a640ea60",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"allMyQuizByPageOwner\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  allMyQuizByPageOwner(pageUID:\"ebf0fc58-30ee-4e4a-9c66-73e00a7ed4f2\"){\n    id\n    question\n    desc\n    awnserChoice {\n      id\n      name\n      desc\n    }\n    awnserCorrect {\n      id\n      name\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateQuiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18759f88-26ab-4d55-bac9-617ff7e8a2d3",
						"exec": [
							"pm.test(\"Test get my freelancerlist\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"updatePageQuiz\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePageQuiz(pageUID:\"ebf0fc58-30ee-4e4a-9c66-73e00a7ed4f2\",input:[{\n      id:\"5fd565e6-73ec-493d-9d10-e484f639d6f3\"\n      question: \"10x7 = ?\"\n      desc: \"\"\n      awnserChoice: [{\n        seq: 1,\n        name: \"A\"\n        desc: \"70\"\n      },\n      {\n        seq: 2,\n        name: \"B\"\n        desc: \"100\"\n      }]\n      awnserCorrect: [{\n        name:\"A\"\n      }]\n      scoreCorrect: 1\n      scoreInCorrect: 0\n    }])\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updatePageDetail",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePageDetail\n  (pageUID:\"a3dd3dee-d401-4e53-af2d-fdbdf0d2e672\",\n  passScore:8,\n  category:[\"b8b34621-5e58-4c41-beb1-1e5bfb799611\"],\n  budget:500)\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{endpoint}}",
					"host": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}